{"version":3,"sources":["logo.svg","components/UniLangMenuCustom.js","App.js","reportWebVitals.js","index.js"],"names":["UniLangMenuCustom","mode","path","state","only","pro","selector","prop","round","text","strict","url","hidden","params","equal","action","inactive","multi","App","className","shadow","mini","routing","list","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAAe,G,KAAA,IAA0B,kC,cCwE1BA,MAxEf,WACI,OACI,iCACI,+BACIC,KAAM,OACNC,KAAM,aACNC,MAAO,mFAGX,+BAAeC,MAAM,EAArB,SACI,qCACI,6BAAYC,KAAK,EAAjB,UACI,iCAAiBD,MAAM,EAAvB,SACI,qCAAqBF,KAAM,kBAAmBI,SAAU,WAAYC,KAAM,OAA1E,SACI,0BAAUC,OAAO,QAIzB,2CACI,qCAAqBN,KAAM,kBAAmBI,SAAU,aAAcC,KAAM,QAA5E,SACI,4BAAYE,MAAM,QAI1B,qCAGJ,2CACI,+BAAeJ,KAAK,EAApB,SACI,6BACI,iCAAiBK,QAAQ,EAAMC,IAAK,iBAApC,SACI,sBAAK,aAAW,GAAGC,QAAM,EAAzB,UACI,iCAAiBC,OAAQ,kBAAzB,SACI,qCACIX,KAAM,kBACNY,MAAO,aACPP,KAAM,WAHV,SAKI,0CACI,uCAAuBH,MAAM,EAA7B,SACI,4BACIW,OAAQ,SACRZ,MAAO,aACPI,KAAM,OAHV,SAKI,0BAAUC,OAAO,QAIzB,mEAKZ,2BAAWK,OAAQ,kBAAmBN,KAAM,WAA5C,SACI,+BAAeS,UAAU,EAAMd,KAAM,aAAcC,MAAO,oCAU1F,qCAAqBD,KAAM,yBAA0BI,SAAU,iBAAkBC,KAAM,MAAvF,SACI,gCAAgBU,OAAO,EAAMhB,KAAM,MAAOC,KAAM,wBClBjDgB,MA3Cf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UAEI,4BAAYC,QAAQ,IAEpB,mFAEA,sBAAKD,UAAU,eAAf,UACI,sCACIE,MAAM,EACNb,OAAO,EACPc,SAAS,EACTC,KAAM,mBALd,qBAQM,iCAAM,cAAC,EAAD,IAAN,0BAGN,qBAAKC,IAAKC,EAAMN,UAAU,WAAWO,IAAI,SAEzC,0CACI,wCACA,gDACA,sDAHJ,OAMA,wCACI,oBACIP,UAAU,WACVQ,KAAK,oCACLC,OAAO,SACPC,IAAI,sBAJR,UAMI,yCANJ,oBCtBLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1f220e54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function UniLangMenuCustom() {\r\n    return (\r\n        <span>\r\n            <uni-store-set\r\n                mode={'init'}\r\n                path={'loc.active'}\r\n                state={'{\"lang\": \"en\", \"flag\": \"gb\", \"name\": \"English\", \"translation\": \"i18n/en.json\"}'}\r\n            />\r\n\r\n            <uni-lang-menu only={true}>\r\n                <uni-menu>\r\n                    <uni-button pro={true}>\r\n                        <uni-button-icon only={true}>\r\n                            <uni-event-store-get path={'loc.active.flag'} selector={'uni-flag'} prop={'name'}>\r\n                                <uni-flag round={true}/>\r\n                            </uni-event-store-get>\r\n                        </uni-button-icon>\r\n\r\n                        <uni-button-label>\r\n                            <uni-event-store-get path={'loc.active.name'} selector={'uni-render'} prop={'value'}>\r\n                                <uni-render text={true}/>\r\n                            </uni-event-store-get>\r\n                        </uni-button-label>\r\n\r\n                        <uni-drop-down/>\r\n                    </uni-button>\r\n\r\n                    <uni-menu-surface>\r\n                        <uni-list-wrap pro={true}>\r\n                            <ul>\r\n                                <uni-load-repeat strict={true} url={'lang-menu.json'}>\r\n                                    <div uni-render=\"\" hidden>\r\n                                        <uni-router-link params={'lang=(( lang ))'}>\r\n                                            <uni-event-store-get\r\n                                                path={'loc.active.lang'}\r\n                                                equal={'(( lang ))'}\r\n                                                prop={'selected'}\r\n                                            >\r\n                                                <uni-list-item>\r\n                                                    <uni-list-item-graphic only={true}>\r\n                                                        <uni-modify\r\n                                                            action={'unbind'}\r\n                                                            state={'(( flag ))'}\r\n                                                            prop={'name'}\r\n                                                        >\r\n                                                            <uni-flag round={true}/>\r\n                                                        </uni-modify>\r\n                                                    </uni-list-item-graphic>\r\n\r\n                                                    <uni-list-item-text>(( name ))</uni-list-item-text>\r\n                                                </uni-list-item>\r\n                                            </uni-event-store-get>\r\n                                        </uni-router-link>\r\n\r\n                                        <uni-route params={'lang=(( lang ))'} prop={'activate'}>\r\n                                            <uni-store-set inactive={true} path={'loc.active'} state={'(( uniself ))'}/>\r\n                                        </uni-route>\r\n                                    </div>\r\n                                </uni-load-repeat>\r\n                            </ul>\r\n                        </uni-list-wrap>\r\n                    </uni-menu-surface>\r\n                </uni-menu>\r\n            </uni-lang-menu>\r\n\r\n            <uni-event-store-get path={'loc.active.translation'} selector={'uni-load-store'} prop={'url'}>\r\n                <uni-load-store multi={true} mode={'set'} path={'loc.translate'}/>\r\n            </uni-event-store-get>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default UniLangMenuCustom;\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport UniLangMenuCustom from './components/UniLangMenuCustom';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {/*Remove uni-router if language routing is not required*/}\n                <uni-router shadow={true}/>\n\n                <uni-translate>Choose the option that suits you best:</uni-translate>\n\n                <div className=\"App-localize\">\n                    <uni-lang-menu-shadow\n                        mini={true}\n                        round={true}\n                        routing={true}\n                        list={'lang-menu.json'}\n                    />\n                    (Web Component)\n                    | <span><UniLangMenuCustom/>(Next Gen custom)</span>\n                </div>\n\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n\n                <uni-translate>\n                    <span>Edit</span>\n                    <code> src/App.js </code>\n                    <span>and save to reload</span>.\n                </uni-translate>\n\n                <uni-translate>\n                    <a\n                        className=\"App-link\"\n                        href=\"https://(( langDocs ))reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        <span>Learn</span> React\n                    </a>\n                </uni-translate>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}